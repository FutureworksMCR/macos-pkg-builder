name: Release Package

on:
  workflow_dispatch:
    inputs:
      package:
        description: 'Package to release (e.g., loopdown-config)'
        required: true
        type: string
      version:
        description: 'Version (leave empty to use version from pkgbuild.yaml)'
        required: false
        type: string

permissions:
  contents: write

jobs:
  release:
    runs-on: macos-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Validate package exists
        run: |
          if [[ ! -d "${{ inputs.package }}" ]]; then
            echo "ERROR: Package directory '${{ inputs.package }}' not found"
            exit 1
          fi
          
          if [[ ! -f "${{ inputs.package }}/pkgbuild.yaml" ]]; then
            echo "ERROR: pkgbuild.yaml not found in ${{ inputs.package }}"
            exit 1
          fi

      - name: Get package version
        id: version
        run: |
          if [[ -n "${{ inputs.version }}" ]]; then
            VERSION="${{ inputs.version }}"
          else
            VERSION=$(grep "version:" "${{ inputs.package }}/pkgbuild.yaml" | awk '{print $2}')
          fi
          
          if [[ -z "$VERSION" ]]; then
            echo "ERROR: Could not determine version"
            exit 1
          fi
          
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "Release version: $VERSION"

      - name: Make build scripts executable
        run: |
          chmod +x build.sh
          chmod +x ${{ inputs.package }}/build.sh

      - name: Build package
        working-directory: ${{ inputs.package }}
        run: ./build.sh

      - name: Verify package exists
        working-directory: ${{ inputs.package }}
        run: |
          PKG_FILE="${{ inputs.package }}.pkg"
          if [[ ! -f "$PKG_FILE" ]]; then
            echo "ERROR: Package file not found at $PKG_FILE"
            exit 1
          fi
          echo "Package built successfully: $PKG_FILE"
          ls -lh "$PKG_FILE"

      - name: Create release tag
        id: tag
        run: |
          TAG="${{ inputs.package }}-v${{ steps.version.outputs.version }}"
          echo "tag=$TAG" >> $GITHUB_OUTPUT
          echo "Release tag: $TAG"

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.tag.outputs.tag }}
          name: "${{ inputs.package }} v${{ steps.version.outputs.version }}"
          body: |
            # ${{ inputs.package }} v${{ steps.version.outputs.version }}
            
            ## Download
            
            ```bash
            curl -LO https://github.com/${{ github.repository }}/releases/download/${{ steps.tag.outputs.tag }}/${{ inputs.package }}.pkg
            ```
            
            ## Install
            
            ```bash
            sudo installer -pkg ${{ inputs.package }}.pkg -target /
            ```
            
            ## Package Info
            
            - **Package**: ${{ inputs.package }}
            - **Version**: ${{ steps.version.outputs.version }}
            - **Built**: ${{ github.run_id }}
            - **Commit**: ${{ github.sha }}
          files: |
            ${{ inputs.package }}/${{ inputs.package }}.pkg
          draft: false
          prerelease: false
          fail_on_unmatched_files: true

      - name: Release summary
        run: |
          echo "## Release Created! ðŸŽ‰" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Package**: ${{ inputs.package }}" >> $GITHUB_STEP_SUMMARY
          echo "**Version**: ${{ steps.version.outputs.version }}" >> $GITHUB_STEP_SUMMARY
          echo "**Tag**: ${{ steps.tag.outputs.tag }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Download URL" >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
          echo "https://github.com/${{ github.repository }}/releases/download/${{ steps.tag.outputs.tag }}/${{ inputs.package }}.pkg" >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
